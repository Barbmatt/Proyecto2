{
  "vertexSource": "#version 300 es\n\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 normalMatrix;\nuniform mat4 modelMatrix;\n\nuniform vec3 L;\n\nuniform vec3 ia;\nuniform float fa;\n\nuniform vec3 ka;\nuniform vec3 kd;\nuniform vec3 ks;\nuniform float n;\n\nin vec3 vertexNormal;\nin vec3 vertexPosition;\nout vec3 color;\n\nvoid main() {\n    vec3 vertexPositionE = vec3(viewMatrix * modelMatrix * vec4(vertexPosition, 1));\n    vec3 LE = vec3(viewMatrix * vec4(L,1));\n    vec3 L =normalize(LE-vertexPositionE);\n    vec3 N =normalize(vec3(normalMatrix*vec4(vertexNormal,1)));\n    \n    float id = max(dot(N,L),0.0); \n    \n    vec3 V = normalize(-vertexPositionE); \n    vec3 R = normalize(reflect(-L,N));\n    float is=pow(max(dot(R,V),0.0),n);\n    \n    color = ia*ka + fa*(kd*id + ks*is);\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(vertexPosition, 1);\n}",
  "fragmentSource": "#version 300 es\nprecision mediump float;\nin vec3 color;\nout vec4 fragmentColor;\n\nvoid main() {\n    fragmentColor = vec4(color,1);\n}",
  "model": "sphere",
  "uniforms": [
    {
      "name": "L",
      "type": "vec3",
      "value": [
        1,
        1,
        1
      ]
    },
    {
      "name": "ia",
      "type": "vec3",
      "value": [
        1,
        1,
        1
      ]
    },
    {
      "name": "fa",
      "type": "float",
      "value": 1
    },
    {
      "name": "ka",
      "type": "vec3",
      "value": [
        0.17000000178813934,
        0.009999999776482582,
        0.009999999776482582
      ]
    },
    {
      "name": "kd",
      "type": "vec3",
      "value": [
        0.6100000143051147,
        0.03999999910593033,
        0.03999999910593033
      ]
    },
    {
      "name": "ks",
      "type": "vec3",
      "value": [
        0.7200000286102295,
        0.6299999952316284,
        0.6299999952316284
      ]
    },
    {
      "name": "n",
      "type": "float",
      "value": 9
    }
  ]
}